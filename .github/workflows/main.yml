name: Build Tiled Windows

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  TILED_REPO: "https://github.com/mapeditor/tiled.git"
  QBS_VERSION: 2.4.1
  CMAKE_VERSION: 3.31

permissions:
  contents: write
  packages: write

jobs:
  version:
    name: Determine Tiled version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      padded_build: ${{ steps.get-version.outputs.padded_build }}

    steps:
    - name: Get version
      id: get-version
      run: |
        echo "version=$(date "+%Y.%m.%d")" >> $GITHUB_OUTPUT
        echo "padded_build=$(printf '%05d' ${{ github.run_number }})" >> $GITHUB_OUTPUT

  build-windows:
    name: Windows (${{ matrix.arch }}-bit)
    runs-on: windows-latest
    needs: version

    strategy:
      matrix:
        include:
        - qt_version: 5.15.2
          qt_version_major: 5
          qt_arch: win32_mingw81
          qt_modules: ""
          arch: 32
          filename_suffix: 'Windows_x86'
          mingw_component: tools_mingw
          mingw_variant: qt.tools.win32_mingw810
          mingw_dir: mingw810_32
        - qt_version: 6.9.2
          qt_version_major: 6
          qt_arch: win64_mingw
          qt_modules: "qtimageformats"
          arch: 64
          filename_suffix: 'Windows_x86_64'
          mingw_component: tools_mingw1310
          mingw_variant: qt.tools.win64_mingw1310
          mingw_dir: mingw1310_64

    env:
      TILED_VERSION: ${{ needs.version.outputs.version }}

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4

    - name: Clone Tiled repository with submodules
      run: |
        git clone --recursive ${{ env.TILED_REPO }} tiled-source
        echo "Tiled cloned successfully"

    - name: Checkout qaseprite dependency
      uses: actions/checkout@v4
      with:
        repository: mapeditor/qaseprite
        path: tiled-source/qaseprite
        ref: '1.0.3'

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ matrix.qt_version }}
        arch: ${{ matrix.qt_arch }}
        modules: ${{ matrix.qt_modules }}
        tools: "${{ matrix.mingw_component }},${{ matrix.mingw_variant }}"
        aqtversion: '==3.1.19'
        setup-python: false
        cache: true

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '${{ env.CMAKE_VERSION }}'

    - name: Install Qbs
      run: |
        choco install -y qbs --version ${{ env.QBS_VERSION }}

    - name: Setup Qbs
      run: |
        export IQTA_TOOLS="${IQTA_TOOLS//D:/\/d}"
        export IQTA_TOOLS="${IQTA_TOOLS//\\/\/}"
        export QT_ROOT_DIR="${QT_ROOT_DIR//D:/\/d}"
        export QT_ROOT_DIR="${QT_ROOT_DIR//\\/\/}"
        qbs setup-toolchains ${IQTA_TOOLS}/${{ matrix.mingw_dir }}/bin/*-w64-mingw32-gcc.exe mingw
        qbs setup-qt ${QT_ROOT_DIR}/bin/qmake.exe qt
        qbs config defaultProfile qt

    - name: Build Zstandard dependency
      working-directory: tiled-source
      run: |
        git clone --depth 1 -b release https://github.com/facebook/zstd.git
        pushd zstd/lib
        CC=gcc mingw32-make -j2 libzstd.a
        popd

    - name: Install qaseprite plugin
      working-directory: tiled-source/qaseprite
      run: |
        ./update-submodules.sh
        pushd aseprite/laf
        patch -p1 < ../../laf-msvc-dynamic-runtime.patch
        popd
        cmake -B build -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles"
        cmake --build build --config Release
        cmake --install build --config Release

    - name: Build Tiled
      working-directory: tiled-source
      run: |
        qbs build config:release projects.Tiled.staticZstd:true

    - name: Set padded build number
      run: |
        echo "PADDED_BUILD=${{ needs.version.outputs.padded_build }}" >> $GITHUB_ENV

    - name: Create ZIP archive
      working-directory: tiled-source
      run: |
        mkdir -p ../output
        pushd release/install-root
        7z a -tzip "../../../output/Tiled-${{ needs.version.outputs.version }}-build${{ needs.version.outputs.padded_build }}_${{ matrix.filename_suffix }}.zip" *
        popd

    - name: Upload Tiled archive
      uses: actions/upload-artifact@v4
      with:
        name: Tiled-${{ needs.version.outputs.version }}-build${{ needs.version.outputs.padded_build }}_${{ matrix.filename_suffix }}
        path: output/*.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [version, build-windows]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Tiled-${{ needs.version.outputs.version }}-build${{ needs.version.outputs.padded_build }}_Windows_x86/*.zip
          Tiled-${{ needs.version.outputs.version }}-build${{ needs.version.outputs.padded_build }}_Windows_x86_64/*.zip
        tag_name: v${{ needs.version.outputs.version }}-build-${{ needs.version.outputs.padded_build }}
        name: Tiled ${{ needs.version.outputs.version }} Build ${{ needs.version.outputs.padded_build }}
        body: |
          Automated build of Tiled ${{ needs.version.outputs.version }} for Windows

          Built from upstream Tiled repository with MinGW-w64 and Qt
          Build number: ${{ needs.version.outputs.padded_build }}
          Commit: ${{ github.sha }}

          **Downloads:**
          - Windows x86 (32-bit): `Tiled-${{ needs.version.outputs.version }}-build${{ needs.version.outputs.padded_build }}_Windows_x86.zip`
          - Windows x64 (64-bit): `Tiled-${{ needs.version.outputs.version }}-build${{ needs.version.outputs.padded_build }}_Windows_x86_64.zip`

          This build includes:
          - Tiled Map Editor
          - All plugins and dependencies
          - Qt runtime libraries
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
